name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/vectorvslist/build/release/debug" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: cmake -B ${{ steps.strings.outputs.build-output-dir }} -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Release

    - name: Debug - List Build Directory
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      shell: bash
      run: |
        echo "Listing the contents of the build directory"
        ls -alh ${{ steps.strings.outputs.build-output-dir }}

    - name: Run Executable
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      shell: bash
      run: |
        # Set executable name based on OS
        if [ "$RUNNER_OS" == "Windows" ]; then
          executable="build/release/debug/vectorvslist.exe"  # Use the correct path for Windows
        else
          executable="build/release/debug/vectorvslist"  # Use the correct path for Linux/macOS
        fi

        # Check if the file exists before trying to run it
        echo "Checking if executable exists: $executable"
        if [ -f "$executable" ]; then
          echo "Executable found, running it"
          ./$executable  # This works for both Windows (Git Bash) and Linux/macOS
        else
          echo "Executable not found: $executable"
          exit 1  # Fail if the executable isn't found
        fi
